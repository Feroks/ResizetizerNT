<?xml version="1.0" encoding="UTF-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<ItemGroup>
		<AvailableItemName Include="SharedImage" />
	</ItemGroup>

	<UsingTask
      AssemblyFile="Resizetizer.NT.dll"
      TaskName="Resizetizer.ResizetizeSharedImages" />

	<PropertyGroup>
		<CleanDependsOn>
			$(CleanDependsOn);
			_CleanResizetizer;
		</CleanDependsOn>

		<_ResizetizerIsAndroid Condition="'$(AndroidApplication)' == 'True'">True</_ResizetizerIsAndroid>
		<_ResizetizerIsiOS Condition="'$(TargetFrameworkIdentifier)'=='Xamarin.iOS' And ('$(OutputType)' != 'Library' OR '$(IsAppExtension)'=='True')">True</_ResizetizerIsiOS>
		<_ResizetizerIsUWP Condition="'$(TargetPlatformIdentifier)'=='UAP' And '$(OutputType)' == 'AppContainerExe'">True</_ResizetizerIsUWP>

		<ResizetizeCollectImagesBeforeTargets Condition="'$(_ResizetizerIsiOS)' == 'True'">
			$(ResizetizeCollectImagesBeforeTargets);
			_CollectBundleResources;
		</ResizetizeCollectImagesBeforeTargets>

		<ResizetizeCollectImagesAfterTargets Condition="'$(_ResizetizerIsAndroid)' == 'True'">
			$(ResizetizeCollectImagesBeforeTargets);
			ResolveProjectReferences;
		</ResizetizeCollectImagesAfterTargets>

		<!--<_CollectBundleResourcesDependsOn Condition="'$(_ResizetizerIsiOS)' == 'True'">
			ResizetizeCollectImages;
			$(_CollectBundleResourcesDependsOn);
		</_CollectBundleResourcesDependsOn>-->
	</PropertyGroup>

	<!-- Finds absolute paths to any SharedImage in this project -->
	<!-- App head projects will invoke this target on their project references to collect images -->
	<Target Name="GetSharedImages" Outputs="@(ExportedSharedImage)">
		<ConvertToAbsolutePath Paths="@(SharedImage)">
			<Output TaskParameter="AbsolutePaths" ItemName="ExportedSharedImage"/>
		</ConvertToAbsolutePath>
	</Target>

	<!-- Collect images from referenced projects -->
	<Target Name="ResizetizeCollectImages"
		Condition="'$(_ResizetizerIsAndroid)' == 'True' Or '$(_ResizetizerIsiOS)' == 'True' Or '$(_ResizetizerIsUWP)' == 'True'"
		BeforeTargets="$(ResizetizeCollectImagesBeforeTargets)"
		AfterTargets="$(ResizetizeCollectImagesAfterTargets)">

		<!-- Invoke the GetSharedImages target on all project references -->
		<!-- This will accumulate images into our SharedImage group -->
		<!--<MSBuild Targets="GetSharedImages" Projects="@(_MSBuildProjectReferenceExistent)">-->
		<MSBuild
			Targets="GetSharedImages"
			Projects="@(ProjectReference)"
			SkipNonexistentProjects="true"
			SkipNonexistentTargets="true">
			<Output
				TaskParameter="TargetOutputs"
				ItemName="SharedImage" />
		</MSBuild>
	</Target>


	<Target Name="ResizetizeiOS"
					Condition="'$(_ResizetizerIsiOS)' == 'True'"
					Inputs="@(SharedImage)"
					Outputs="$(IntermediateOutputPath)resizetizer.stamp"
					AfterTargets="ResizetizeCollectImages">

		<!-- Where in obj/ to store these -->
		<PropertyGroup>
			<ResizetizerIntermediateOutputPath>$(IntermediateOutputPath)resizetizer\</ResizetizerIntermediateOutputPath>
		</PropertyGroup>

		<ResizetizeSharedImages
			PlatformType="ios"
			IntermediateOutputPath="$(ResizetizerIntermediateOutputPath)"
			SharedImages="@(SharedImage)">
		</ResizetizeSharedImages>

		<ItemGroup>
			<!-- Get Images that were generated -->
			<!-- Either from the task, or if the task was skipped (up to date), use the wildcard lookup -->
			<_ResizetizerCollectedImages Condition="'@(CopiedResources)' != ''" Include="@(CopiedResources)" />
			<_ResizetizerCollectedImages Condition="'@(CopiedResources)' == ''" Include="$(ResizetizerIntermediateOutputPath)**\*" />

			<!-- Batch the collectd items into BundleResource which iOS expects -->
			<_ResizetizerCollectedBundleResourceImages Include="@(_ResizetizerCollectedImages->'%(FullPath)')">
				<LogicalName>%(_ResizetizerCollectedImages.Filename)%(_ResizetizerCollectedImages.Extension)</LogicalName>
				<TargetPath>%(_ResizetizerCollectedImages.Filename)%(_ResizetizerCollectedImages.Extension)</TargetPath>
			</_ResizetizerCollectedBundleResourceImages>

			<!-- iOS Expects images in this group -->
			<BundleResource Include="@(_ResizetizerCollectedBundleResourceImages)" />
		</ItemGroup>

		<!-- If on Windows, using build host, copy the files over to build server host too -->
		<CopyFilesToBuildServer
			Condition="'$(IsMacEnabled)'=='true'"
			SessionId="$(BuildSessionId)"
			Files="@(_ResizetizerCollectedBundleResourceImages)" />

		<!-- Touch/create our stamp file for outputs -->
		<Touch Files="$(IntermediateOutputPath)resizetizer.stamp" AlwaysCreate="True" />

		<!-- Include our images and stamp file as filewrites so they don't get rm'd -->
		<ItemGroup>
			<FileWrites Include="@(_ResizetizerCollectedBundleResourceImages)" />
			<FileWrites Include="$(IntermediateOutputPath)resizetizer.stamp" />
		</ItemGroup>
			
	</Target>


	<!-- This should copy images into the app's obj/ area and include them as android resources -->
	<Target Name="ResizetizeAndroid"
		Condition="'$(_ResizetizerIsAndroid)' == 'True'"
		Inputs="@(SharedImage)"
		Outputs="$(IntermediateOutputPath)resizetizer.stamp"
		AfterTargets="ResizetizeCollectImages">

		<!-- Where in obj/ to store these -->
		<PropertyGroup>
			<ResizetizerIntermediateOutputPath>$(IntermediateOutputPath)resizetizer\</ResizetizerIntermediateOutputPath>
		</PropertyGroup>

		<ResizetizeSharedImages
			PlatformType="android"
			IntermediateOutputPath="$(ResizetizerIntermediateOutputPath)"
			SharedImages="@(SharedImage)">
			<!-- <Output TaskParameter="CopiedResources" ItemName="FileWrites" /> -->
		</ResizetizeSharedImages>

		<ItemGroup>
			<!-- Get Images that were generated -->
			<!-- Either from the task, or if the task was skipped (up to date), use the wildcard lookup -->
			<_ResizetizerCollectedImages Condition="'@(CopiedResources)' != ''" Include="@(CopiedResources)" />
			<_ResizetizerCollectedImages Condition="'@(CopiedResources)' == ''" Include="$(ResizetizerIntermediateOutputPath)**\*" />

			<!-- If we had any images, add that obj/ folder as a resource directory -->
			<LibraryResourceDirectories Condition="Exists ('$(ResizetizerIntermediateOutputPath)')" Include="$(ResizetizerIntermediateOutputPath)">
				<StampFile>$(IntermediateOutputPath)resizetizer.stamp</StampFile>
			</LibraryResourceDirectories>
		</ItemGroup>

		<Touch Files="$(IntermediateOutputPath)resizetizer.stamp" AlwaysCreate="True" />

		<ItemGroup>
			<FileWrites Include="@(_ResizetizerCollectedImages)" />
			<FileWrites Include="$(IntermediateOutputPath)resizetizer.stamp" />
		</ItemGroup>
	</Target>

	<Target Name="ResizetizeUWP"
					Condition="'$(_ResizetizerIsUWP)' == 'True'"
					Inputs="@(SharedImage)"
					Outputs="$(IntermediateOutputPath)resizetizer.stamp"
					DependsOnTargets="ResizetizeCollectImages"
					BeforeTargets="AssignTargetPaths">

		<!-- Where in obj/ to store these -->
		<PropertyGroup>
			<ResizetizerIntermediateOutputPath>$(IntermediateOutputPath)resizetizer\</ResizetizerIntermediateOutputPath>
		</PropertyGroup>

		<ResizetizeSharedImages
			PlatformType="uwp"
			IntermediateOutputPath="$(ResizetizerIntermediateOutputPath)"
			SharedImages="@(SharedImage)">
			<!-- <Output TaskParameter="CopiedResources" ItemName="FileWrites" /> -->
		</ResizetizeSharedImages>

		<ItemGroup>
			<!-- Get Images that were generated -->
			<!-- Either from the task, or if the task was skipped (up to date), use the wildcard lookup -->
			<_ResizetizerCollectedImages Condition="'@(CopiedResources)' != ''" Include="@(CopiedResources)" />
			<_ResizetizerCollectedImages Condition="'@(CopiedResources)' == ''" Include="$(ResizetizerIntermediateOutputPath)**\*" />

			<ContentWithTargetPath Include="@(_ResizetizerCollectedImages)">
				<TargetPath>%(_ResizetizerCollectedImages.Filename)%(_ResizetizerCollectedImages.Extension)</TargetPath>
			</ContentWithTargetPath>
		</ItemGroup>

		<Touch Files="$(IntermediateOutputPath)resizetizer.stamp" AlwaysCreate="True" />

		<ItemGroup>
			<!-- If we had any images, add that obj/ folder as a resource directory -->
			<FileWrites Include="@(_ResizetizerCollectedImages)" />

			<FileWrites Include="$(IntermediateOutputPath)resizetizer.stamp" />
		</ItemGroup>

	</Target>

	<Target Name="_CleanResizetizer">
		<PropertyGroup>
			<ResizetizerIntermediateOutputPath>$(IntermediateOutputPath)resizetizer\</ResizetizerIntermediateOutputPath>
		</PropertyGroup>

		<RemoveDir Directories="$(ResizetizerIntermediateOutputPath)" Condition="Exists ('$(ResizetizerIntermediateOutputPath)' )" />
	</Target>
</Project>